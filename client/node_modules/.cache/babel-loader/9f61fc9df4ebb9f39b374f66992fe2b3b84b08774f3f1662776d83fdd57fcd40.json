{"ast":null,"code":"var _jsxFileName = \"/Users/joymondal/Documents/Learn/ReactProjects/react-blog/client/src/components/singlePost/SinglePost.js\",\n  _s = $RefreshSig$();\nimport { useLocation } from \"react-router-dom\";\nimport \"./singlePost.css\";\nimport { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { Context } from \"../../context/Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SinglePost() {\n  _s();\n  const loc = useLocation();\n  const pathId = loc.pathname.split(\"/\")[2]; //used 'pathId' instead of just 'path'\n  const [post, setPost] = useState({});\n  const PF = \"http://localhost:5000/images/\"; // Pubic Folder for Photos\n  const {\n    user\n  } = useContext(Context); //for checking logged in username\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(\"/posts/\" + pathId); // get() req always returns a Response Type\n      console.log(res.data);\n      setPost(res.data);\n      setTitle(res.data.title);\n      setDesc(res.data.desc);\n    };\n    let data = getPost();\n    console.log(data);\n  }, [pathId]);\n  const handleDelete = async () => {\n    try {\n      var result = window.confirm(\"Are you sure that you want to Delete? \"); // for confirmation before delete\n      if (result) {\n        await axios.delete(`/posts/${post._id}`, {\n          data: {\n            username: user.username\n          }\n        });\n        window.location.replace(\"/\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleUpdate = async e => {\n    try {\n      var result = window.confirm(\"Are you sure that you want to Update? \"); // for confirmation before delete\n      if (result) {\n        await axios.put(`/posts/${post._id}`, {\n          username: user.username,\n          title,\n          desc\n        } // shorthand ==> title:title , desc:desc\n        );\n\n        window.location.reload();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singlePost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlePostWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"singlePostImg\",\n        src: PF + post.photo,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title //{post.title}==-> {title}\n        ,\n        className: \"singlePostTitleInput\",\n        autoFocus: true,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"singlePostTitle\",\n        children: [post.title,\n        // the user only can edit or update the post - 1. Check the \"username of post\" and \"logged in username\"- context API\n        post.username === (user === null || user === void 0 ? void 0 : user.username) &&\n        /*#__PURE__*/\n        // ?. optional chaing - if there's no user, not gonna bother about .username\n        _jsxDEV(\"div\", {\n          className: \"singlePostEdit\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-edit\",\n            onClick: () => setUpdateMode(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-trash-alt\",\n            onClick: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Author:\", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/?user=${post.username}`,\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              className: \"singlePostAuthor\",\n              children: post.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: new Date(post.createdAt).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"singlePostDescInput\",\n        value: desc,\n        onChange: e => {\n          setDesc(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this) //{post.desc} ==> {desc} new variable\n      : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"singlePostDesc\",\n        children: [post.desc, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), updateMode && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"singlePostButton\",\n        type: \"submit\",\n        onClick: handleUpdate,\n        children: \"UPDATE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(SinglePost, \"iyxhMaVBldYi3hJFmrfbj2bLPVY=\", false, function () {\n  return [useLocation];\n});\n_c = SinglePost;\nexport default SinglePost;\nvar _c;\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"names":["useLocation","useEffect","useState","useContext","axios","Link","Context","jsxDEV","_jsxDEV","SinglePost","_s","loc","pathId","pathname","split","post","setPost","PF","user","title","setTitle","desc","setDesc","updateMode","setUpdateMode","getPost","res","get","console","log","data","handleDelete","result","window","confirm","delete","_id","username","location","replace","error","handleUpdate","e","put","reload","className","children","src","photo","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","value","autoFocus","onChange","target","onClick","to","Date","createdAt","toDateString","_c","$RefreshReg$"],"sources":["/Users/joymondal/Documents/Learn/ReactProjects/react-blog/client/src/components/singlePost/SinglePost.js"],"sourcesContent":["import { useLocation } from \"react-router-dom\";\nimport \"./singlePost.css\";\nimport { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { Context } from \"../../context/Context\";\n\nfunction SinglePost() {\n  const loc = useLocation();\n  const pathId = loc.pathname.split(\"/\")[2]; //used 'pathId' instead of just 'path'\n  const [post, setPost] = useState({});\n  const PF = \"http://localhost:5000/images/\"; // Pubic Folder for Photos\n  const { user } = useContext(Context); //for checking logged in username\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(\"/posts/\" + pathId); // get() req always returns a Response Type\n      console.log(res.data);\n      setPost(res.data);\n      setTitle(res.data.title);\n      setDesc(res.data.desc);\n    };\n    let data = getPost();\n    console.log(data);\n  }, [pathId]);\n\n  const handleDelete = async () => {\n    try {\n      var result = window.confirm(\"Are you sure that you want to Delete? \"); // for confirmation before delete\n      if (result) {\n        await axios.delete(`/posts/${post._id}`, {\n          data: { username: user.username },\n        });\n        window.location.replace(\"/\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleUpdate = async (e) => {\n    try {\n      var result = window.confirm(\"Are you sure that you want to Update? \"); // for confirmation before delete\n      if (result) {\n        await axios.put(\n          `/posts/${post._id}`,\n          { username: user.username, title, desc } // shorthand ==> title:title , desc:desc\n        );\n        window.location.reload();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    <div className=\"singlePost\">\n      <div className=\"singlePostWrapper\">\n        <img className=\"singlePostImg\" src={PF + post.photo} alt=\"\" />\n        {updateMode ? (\n          <input\n            type=\"text\"\n            value={title} //{post.title}==-> {title}\n            className=\"singlePostTitleInput\"\n            autoFocus\n            onChange={(e) => setTitle(e.target.value)}\n          />\n        ) : (\n          <h1 className=\"singlePostTitle\">\n            {post.title}\n            {\n              // the user only can edit or update the post - 1. Check the \"username of post\" and \"logged in username\"- context API\n              post.username === user?.username && ( // ?. optional chaing - if there's no user, not gonna bother about .username\n                <div className=\"singlePostEdit\">\n                  <i\n                    className=\"singlePostIcon far fa-edit\"\n                    onClick={() => setUpdateMode(true)}\n                  ></i>\n                  <i\n                    className=\"singlePostIcon far fa-trash-alt\"\n                    onClick={handleDelete}\n                  ></i>\n                </div>\n              )\n            }\n          </h1>\n        )}\n        <div className=\"singlePostInfo\">\n          <span>\n            Author:\n            <Link to={`/?user=${post.username}`} className=\"link\">\n              <b className=\"singlePostAuthor\">{post.username}</b>\n            </Link>\n          </span>\n          <span>{new Date(post.createdAt).toDateString()}</span>\n        </div>\n        {updateMode ? (\n          <textarea\n            className=\"singlePostDescInput\"\n            value={desc}\n            onChange={(e) => {\n              setDesc(e.target.value);\n            }}\n          /> //{post.desc} ==> {desc} new variable\n        ) : (\n          <p className=\"singlePostDesc\">{post.desc} </p>\n        )}\n\n        {updateMode && (\n          <button\n            className=\"singlePostButton\"\n            type=\"submit\"\n            onClick={handleUpdate}\n          >\n            UPDATE\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default SinglePost;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}